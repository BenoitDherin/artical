{"version":3,"sources":["webpack:///./src/scripts/sketches/marred-potential.js"],"names":["marredPotential","p","hypotrochoids","angle","hypotrochoid","fixedCircleRadius","rollingCircleRadius","h","x","Math","cos","y","sin","ellipse","preload","setup","createCanvas","windowWidth","windowHeight","background","smooth","ellipseMode","CENTER","stroke","hValues","i","length","draw","mousePressed","keyReleased"],"mappings":"4FAIe,SAASA,EAAgBC,GAGtC,IAAIC,EAAgB,GAChBC,EAAQ,GAyCZ,SAASC,EAAaC,EAAmBC,EAAqBC,GAC5D,IAAIC,GAAMH,EAAoBC,GAAuBG,KAAKC,IAAIP,GAAWI,EAAIE,KAAKC,KAAML,EAAoBC,GAAuBA,EAAuBH,GAAU,IAChKQ,GAAMN,EAAoBC,GAAuBG,KAAKG,IAAIT,GAAWI,EAAIE,KAAKG,KAAMP,EAAoBC,GAAuBA,EAAuBH,GAAU,IACpKF,EAAEY,QAAQL,EAAGG,EAAG,EAAG,GACnBR,GAAS,OA1CXF,EAAEa,QAAU,aAKZb,EAAEc,MAAQ,WACRd,EAAEe,aAAaf,EAAEgB,YAAahB,EAAEiB,cAChCjB,EAAEkB,WAAW,GACblB,EAAEmB,SACFnB,EAAEoB,YAAYpB,EAAEqB,QAChBrB,EAAEsB,OAAO,IAAK,IAAK,IAAK,KAKxB,IAJA,IAAMC,EAAU,CAAC,GAAI,IAAK,IAAK,GAAI,IAI1BC,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAClCvB,EAAcuB,GAAK,CAJK,IACE,IAGkCD,EAAQC,KAKxExB,EAAE0B,KAAO,WACP,IAAK,IAAIF,EAAI,EAAGA,EAAIvB,EAAcwB,OAAQD,IAAK,CAAC,IAAD,EACKvB,EAAcuB,GAChErB,EAF6C,kBAOjDH,EAAE2B,aAAe,aAIjB3B,EAAE4B,YAAc,aA5ClB","file":"19-e11bdc62e39e37b317f7.js","sourcesContent":["// import p5 from './p5.min'; // This instance of p5 is for using static methods, which for some reason are not available on the 'p' instance.\n\n// The basic idea here is that you'll need to use the `p` namespace to access\n// all non-static p5 methods and variables here. Any static methods need to be accessed with the p5 namespace (imported above).\nexport default function marredPotential(p) {\n\n  // ~~~~~~ Initialize variables ~~~~~~~~~\n  let hypotrochoids = []\n  let angle = 45.0\n  \n  // ~~~~~~ React lifecycle methods ~~~~~~\n  p.preload = () => {\n\n  }\n\n  // ~~~~~~ Setup ~~~~~~\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight)\n    p.background(0)\n    p.smooth()\n    p.ellipseMode(p.CENTER)\n    p.stroke(245, 230, 156, 100)\n    const hValues = [19, 140, 175, 50, 90]\n    const fixedCircleRadius = 240.0\n    const rollingCircleRadius = 160.0\n\n    for (let i = 0; i < hValues.length; i++) {\n      hypotrochoids[i] = [fixedCircleRadius, rollingCircleRadius, hValues[i]]\n    }\n  }\n\n  // ~~~~~~ Draw ~~~~~~\n  p.draw = () => {\n    for (let i = 0; i < hypotrochoids.length; i++) {\n      let [fixedCircleRadius, rollingCircleRadius, h] = hypotrochoids[i]\n      hypotrochoid(fixedCircleRadius, rollingCircleRadius, h);\n    }\n  }\n\n  // ~~~~~~ Other commonly used p5 methods\n  p.mousePressed = () => {\n\n  }\n\n  p.keyReleased = () => {\n    \n  }\n\n  // ~~~~~~ Helper functions ~~~~~~~~~\n  function hypotrochoid(fixedCircleRadius, rollingCircleRadius, h) {\n    let x = ((fixedCircleRadius - rollingCircleRadius) * Math.cos(angle)) + (h * Math.cos(((fixedCircleRadius - rollingCircleRadius) / rollingCircleRadius) * angle)) + 300\n    let y = ((fixedCircleRadius - rollingCircleRadius) * Math.sin(angle)) - (h * Math.sin(((fixedCircleRadius - rollingCircleRadius) / rollingCircleRadius) * angle)) + 300\n    p.ellipse(x, y, 1, 1)\n    angle += 0.00111;\n  }\n  // ~~~~~~ Classes ~~~~~~~~~~~~\n  \n}\n\n"],"sourceRoot":""}